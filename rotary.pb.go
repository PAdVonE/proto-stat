// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rotary.proto

package stat_repository

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RotaryRequest struct {
	Geo                  string   `protobuf:"bytes,1,opt,name=geo,proto3" json:"geo,omitempty"`
	ServiceId            int32    `protobuf:"varint,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RotaryRequest) Reset()         { *m = RotaryRequest{} }
func (m *RotaryRequest) String() string { return proto.CompactTextString(m) }
func (*RotaryRequest) ProtoMessage()    {}
func (*RotaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52d0b33922dd453b, []int{0}
}

func (m *RotaryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RotaryRequest.Unmarshal(m, b)
}
func (m *RotaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RotaryRequest.Marshal(b, m, deterministic)
}
func (m *RotaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RotaryRequest.Merge(m, src)
}
func (m *RotaryRequest) XXX_Size() int {
	return xxx_messageInfo_RotaryRequest.Size(m)
}
func (m *RotaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RotaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RotaryRequest proto.InternalMessageInfo

func (m *RotaryRequest) GetGeo() string {
	if m != nil {
		return m.Geo
	}
	return ""
}

func (m *RotaryRequest) GetServiceId() int32 {
	if m != nil {
		return m.ServiceId
	}
	return 0
}

type RotaryResponse struct {
	Confirm              []int32  `protobuf:"varint,1,rep,packed,name=confirm,proto3" json:"confirm,omitempty"`
	Test                 []int32  `protobuf:"varint,2,rep,packed,name=test,proto3" json:"test,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RotaryResponse) Reset()         { *m = RotaryResponse{} }
func (m *RotaryResponse) String() string { return proto.CompactTextString(m) }
func (*RotaryResponse) ProtoMessage()    {}
func (*RotaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52d0b33922dd453b, []int{1}
}

func (m *RotaryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RotaryResponse.Unmarshal(m, b)
}
func (m *RotaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RotaryResponse.Marshal(b, m, deterministic)
}
func (m *RotaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RotaryResponse.Merge(m, src)
}
func (m *RotaryResponse) XXX_Size() int {
	return xxx_messageInfo_RotaryResponse.Size(m)
}
func (m *RotaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RotaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RotaryResponse proto.InternalMessageInfo

func (m *RotaryResponse) GetConfirm() []int32 {
	if m != nil {
		return m.Confirm
	}
	return nil
}

func (m *RotaryResponse) GetTest() []int32 {
	if m != nil {
		return m.Test
	}
	return nil
}

func init() {
	proto.RegisterType((*RotaryRequest)(nil), "stat.repository.RotaryRequest")
	proto.RegisterType((*RotaryResponse)(nil), "stat.repository.RotaryResponse")
}

func init() { proto.RegisterFile("rotary.proto", fileDescriptor_52d0b33922dd453b) }

var fileDescriptor_52d0b33922dd453b = []byte{
	// 182 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8e, 0x4d, 0x6b, 0x83, 0x40,
	0x10, 0x40, 0x59, 0xad, 0x2d, 0x0e, 0xfd, 0x62, 0x4f, 0x4b, 0xa1, 0x54, 0x3c, 0x79, 0xd2, 0x43,
	0xef, 0xa5, 0xd7, 0x5c, 0xf7, 0x0f, 0x04, 0x3f, 0x46, 0x59, 0x88, 0xce, 0x66, 0x67, 0x0c, 0xf8,
	0xef, 0x43, 0x36, 0xf1, 0xf6, 0xe6, 0x0d, 0xf3, 0x18, 0x78, 0x0d, 0x24, 0x6d, 0xd8, 0x6a, 0x1f,
	0x48, 0x48, 0x7f, 0xb0, 0xb4, 0x52, 0x07, 0xf4, 0xc4, 0x4e, 0x28, 0x6c, 0x5f, 0x3f, 0x13, 0xd1,
	0x74, 0xc2, 0x26, 0xae, 0xbb, 0x75, 0x6c, 0xc4, 0xcd, 0xc8, 0xd2, 0xce, 0xfe, 0x7e, 0x51, 0xfe,
	0xc3, 0x9b, 0x8d, 0x05, 0x8b, 0xe7, 0x15, 0x59, 0xf4, 0x27, 0xa4, 0x13, 0x92, 0x51, 0x85, 0xaa,
	0x72, 0x7b, 0x43, 0xfd, 0x0d, 0xc0, 0x18, 0x2e, 0xae, 0xc7, 0xa3, 0x1b, 0x4c, 0x52, 0xa8, 0x2a,
	0xb3, 0xf9, 0xc3, 0x1c, 0x86, 0xf2, 0x0f, 0xde, 0xf7, 0x02, 0x7b, 0x5a, 0x18, 0xb5, 0x81, 0x97,
	0x9e, 0x96, 0xd1, 0x85, 0xd9, 0xa8, 0x22, 0xad, 0x32, 0xbb, 0x8f, 0x5a, 0xc3, 0x93, 0x20, 0x8b,
	0x49, 0xa2, 0x8e, 0xdc, 0x3d, 0xc7, 0x47, 0x7e, 0xaf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x98,
	0x7d, 0x05, 0xca, 0x00, 0x00, 0x00,
}
